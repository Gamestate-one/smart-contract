{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x94561e5031f092d8B77A9DD9dd67A56b7Cd05C9d",
      "txHash": "0xec0c5ff75c0a9642214ebb62a425e2221e45d38570b64b8142b67e3d5b4d881c",
      "kind": "uups"
    },
    {
      "address": "0x9C8eFF4430bc3Acb717a9d84A696170fc27C7637",
      "txHash": "0x775298a1abacc72344ba09856f4b6fd2f0ee435cb82c3a44b5f598aee8e4b456",
      "kind": "uups"
    },
    {
      "address": "0xa3EA8f188cb908CC07AEB23D1E1acD9bA82F5A55",
      "txHash": "0x3a8a038d6844000f60e8acc24388fcb30d3d1aac673fa47622ab0d95f7f4634e",
      "kind": "uups"
    },
    {
      "address": "0x31E34eD544De1A049905D9b3e0Dd3cAD1137F3eA",
      "txHash": "0x767e5a707aed147c3cc6f79fa9e37ca7951601240b7793ceacea40ad0d4cd51f",
      "kind": "uups"
    },
    {
      "address": "0x94C00A503a2eF543279B92403AE2f1c93d01E3fa",
      "txHash": "0xc7d906c274c09d9c11232c933b5bea87a5231b3a1b0a74ee2863d2209db1718d",
      "kind": "uups"
    },
    {
      "address": "0xE81a7ee5D485402feFC103E7FC66c668c723a900",
      "txHash": "0xa48bad89c5ee617696f8ccdb1c862531429e95b81c19dcef6f6a173505818142",
      "kind": "uups"
    },
    {
      "address": "0x720B26220a97CFECBa74d98802EE264D7cc6cb39",
      "txHash": "0x752a8dd29f16858349003a4dc156a7fce04195cf620025da63aa2b93c84d6fbe",
      "kind": "uups"
    }
  ],
  "impls": {
    "8bc265739af1a71afc5bb1660adb55c80d9517e4b0bddd0526053ffcc49960a4": {
      "address": "0x44fe2895eFA9c2e1fD33d3f453fe426BFC432CBb",
      "txHash": "0x4d5d0ed3869f266ffd2dc0547fbe4f98cd25ee166987c562408bad5d9c3158e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Vesting",
            "label": "gamestateToken",
            "type": "t_contract(GamestateToken)5104",
            "src": "contracts\\Vesting.sol:32"
          },
          {
            "contract": "Vesting",
            "label": "vests",
            "type": "t_mapping(t_address,t_struct(VestingInformation)5579_storage)",
            "src": "contracts\\Vesting.sol:33"
          }
        ],
        "types": {
          "t_contract(GamestateToken)5104": {
            "label": "contract GamestateToken"
          },
          "t_mapping(t_address,t_struct(VestingInformation)5579_storage)": {
            "label": "mapping(address => struct Vesting.VestingInformation)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(VestingInformation)5579_storage": {
            "label": "struct Vesting.VestingInformation",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "maxSupplyClaim",
                "type": "t_uint256"
              },
              {
                "label": "timeIncreaseSupplyCanClaim",
                "type": "t_uint256"
              },
              {
                "label": "supplyIncrease",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0f06b85b23016b3ee978c530b5f9909a19073db4739ee6ef620521496532472c": {
      "address": "0x97CBED29B95Ce4C07Cc6685Ecead096Eab69bbc1",
      "txHash": "0x7ce3a6df2a20dafc14249e1e5197b090cb60fb2a8f53143cdbafdd235c5bfc6d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Vesting",
            "label": "gamestateToken",
            "type": "t_contract(GamestateToken)5104",
            "src": "contracts\\Vesting.sol:32"
          },
          {
            "contract": "Vesting",
            "label": "vests",
            "type": "t_mapping(t_address,t_struct(VestingInformation)5579_storage)",
            "src": "contracts\\Vesting.sol:33"
          }
        ],
        "types": {
          "t_contract(GamestateToken)5104": {
            "label": "contract GamestateToken"
          },
          "t_mapping(t_address,t_struct(VestingInformation)5579_storage)": {
            "label": "mapping(address => struct Vesting.VestingInformation)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(VestingInformation)5579_storage": {
            "label": "struct Vesting.VestingInformation",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "maxSupplyClaim",
                "type": "t_uint256"
              },
              {
                "label": "timeIncreaseSupplyCanClaim",
                "type": "t_uint256"
              },
              {
                "label": "supplyIncrease",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2e82bc0bfe44babb9f4db448be8444c0278131bff15808d95fa43be2460e848e": {
      "address": "0xe30E0Ded334790B95FB2b6d03A57016DB36d1a3C",
      "txHash": "0x28ba1422e2304dddb62766f9b5e138217ba35108d37a5de80ac2a88477a41ace",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Vesting",
            "label": "gamestateToken",
            "type": "t_contract(GamestateToken)3029",
            "src": "contracts\\Vesting.sol:32"
          },
          {
            "contract": "Vesting",
            "label": "vests",
            "type": "t_mapping(t_address,t_struct(VestingInformation)3070_storage)",
            "src": "contracts\\Vesting.sol:33"
          }
        ],
        "types": {
          "t_contract(GamestateToken)3029": {
            "label": "contract GamestateToken"
          },
          "t_mapping(t_address,t_struct(VestingInformation)3070_storage)": {
            "label": "mapping(address => struct Vesting.VestingInformation)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(VestingInformation)3070_storage": {
            "label": "struct Vesting.VestingInformation",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "maxSupplyClaim",
                "type": "t_uint256"
              },
              {
                "label": "timeIncreaseSupplyCanClaim",
                "type": "t_uint256"
              },
              {
                "label": "supplyIncrease",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5b9a912674f2aaf528c448c9237b19579546a2247e05db96d6b703b0e93003a5": {
      "address": "0x2Cd2Af6EDa8B44adA578786637Fb6438d1530895",
      "txHash": "0x13faa754109498854b31503fb793d1120505d33a65e446e66fa5bd7d977f69bd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Vesting",
            "label": "gamestateToken",
            "type": "t_contract(GamestateToken)3029",
            "src": "contracts\\Vesting.sol:32"
          },
          {
            "contract": "Vesting",
            "label": "vests",
            "type": "t_mapping(t_address,t_struct(VestingInformation)3070_storage)",
            "src": "contracts\\Vesting.sol:33"
          }
        ],
        "types": {
          "t_contract(GamestateToken)3029": {
            "label": "contract GamestateToken"
          },
          "t_mapping(t_address,t_struct(VestingInformation)3070_storage)": {
            "label": "mapping(address => struct Vesting.VestingInformation)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(VestingInformation)3070_storage": {
            "label": "struct Vesting.VestingInformation",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "maxSupplyClaim",
                "type": "t_uint256"
              },
              {
                "label": "timeIncreaseSupplyCanClaim",
                "type": "t_uint256"
              },
              {
                "label": "supplyIncrease",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fad72cc6fa0512c0c07895225a1b884e21c29c30a7b9a4042c5376809819d264": {
      "address": "0xA4e89583235ca13B40C0F22bF330475Ae21abdA4",
      "txHash": "0x8c6e1e718277d1249288d2ef891ff415a524ac2ba1c7174c1920ae092623054b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Vesting",
            "label": "gamestateToken",
            "type": "t_contract(GamestateToken)7123",
            "src": "contracts\\Vesting.sol:32"
          },
          {
            "contract": "Vesting",
            "label": "vests",
            "type": "t_mapping(t_address,t_struct(VestingInformation)8517_storage)",
            "src": "contracts\\Vesting.sol:33"
          }
        ],
        "types": {
          "t_contract(GamestateToken)7123": {
            "label": "contract GamestateToken"
          },
          "t_mapping(t_address,t_struct(VestingInformation)8517_storage)": {
            "label": "mapping(address => struct Vesting.VestingInformation)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(VestingInformation)8517_storage": {
            "label": "struct Vesting.VestingInformation",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "maxSupplyClaim",
                "type": "t_uint256"
              },
              {
                "label": "timeIncreaseSupplyCanClaim",
                "type": "t_uint256"
              },
              {
                "label": "supplyIncrease",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3cf68cfd65b7d97916521154e48da5ea08d0e2a3732fcc101bf4612936be072a": {
      "address": "0x7056C7850e531DdCC103907e7d497E662561F111",
      "txHash": "0x5ea230784a5b91b3f5c0b2118c55b2502864cb6ab516aa1bf37d76011db3f36e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Vesting",
            "label": "gamestateToken",
            "type": "t_contract(GamestateToken)3029",
            "src": "contracts\\Vesting.sol:32"
          },
          {
            "contract": "Vesting",
            "label": "vests",
            "type": "t_mapping(t_address,t_struct(VestingInformation)3070_storage)",
            "src": "contracts\\Vesting.sol:33"
          }
        ],
        "types": {
          "t_contract(GamestateToken)3029": {
            "label": "contract GamestateToken"
          },
          "t_mapping(t_address,t_struct(VestingInformation)3070_storage)": {
            "label": "mapping(address => struct Vesting.VestingInformation)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(VestingInformation)3070_storage": {
            "label": "struct Vesting.VestingInformation",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "maxSupplyClaim",
                "type": "t_uint256"
              },
              {
                "label": "timeIncreaseSupplyCanClaim",
                "type": "t_uint256"
              },
              {
                "label": "supplyIncrease",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1932db252e941a95d8e98fc500812ff69718260724251b334a15f364b8e72700": {
      "address": "0x7b72A2a7a2971Fee728249927AF04f4e9391e557",
      "txHash": "0xc9a4e5f987a2c6230a5e58866139e84e754941581c8c888488136b71d48a07c5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Vesting",
            "label": "gamestateToken",
            "type": "t_contract(GamestateToken)3029",
            "src": "contracts\\Vesting.sol:32"
          },
          {
            "contract": "Vesting",
            "label": "vests",
            "type": "t_mapping(t_address,t_struct(VestingInformation)3070_storage)",
            "src": "contracts\\Vesting.sol:33"
          }
        ],
        "types": {
          "t_contract(GamestateToken)3029": {
            "label": "contract GamestateToken"
          },
          "t_mapping(t_address,t_struct(VestingInformation)3070_storage)": {
            "label": "mapping(address => struct Vesting.VestingInformation)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(VestingInformation)3070_storage": {
            "label": "struct Vesting.VestingInformation",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "maxSupplyClaim",
                "type": "t_uint256"
              },
              {
                "label": "timeIncreaseSupplyCanClaim",
                "type": "t_uint256"
              },
              {
                "label": "supplyIncrease",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "507a31a6568cd1827507e12e40bcb61c6f35d4e8748c2df2a7ced7f43347ea68": {
      "address": "0x2264dB3394Da3ef4EB0bf1D36820D2DB49E9acc4",
      "txHash": "0x0b5043f3883644a9c533bd39d6e45f0c73d840414320fba39600f840eeabf95a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Vesting",
            "label": "gamestateToken",
            "type": "t_contract(GamestateToken)7123",
            "src": "contracts\\Vesting.sol:32"
          },
          {
            "contract": "Vesting",
            "label": "vests",
            "type": "t_mapping(t_address,t_struct(VestingInformation)8517_storage)",
            "src": "contracts\\Vesting.sol:33"
          }
        ],
        "types": {
          "t_contract(GamestateToken)7123": {
            "label": "contract GamestateToken"
          },
          "t_mapping(t_address,t_struct(VestingInformation)8517_storage)": {
            "label": "mapping(address => struct Vesting.VestingInformation)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(VestingInformation)8517_storage": {
            "label": "struct Vesting.VestingInformation",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "maxSupplyClaim",
                "type": "t_uint256"
              },
              {
                "label": "timeIncreaseSupplyCanClaim",
                "type": "t_uint256"
              },
              {
                "label": "supplyIncrease",
                "type": "t_uint256"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7361699d611d02073f862cb7713350b1b06c0825a31f0d4b4bafbe9c40053679": {
      "address": "0xFcFDe32CB142a022016bE32674b3103f09605D9A",
      "txHash": "0xcf7ae38848c5420bb8a844fda98b378eaf2b12dd377ca873d1729c5139ee47f1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Marketplace",
            "label": "erc721Contract",
            "type": "t_contract(ERC721Upgradeable)2606",
            "src": "contracts\\Marketplace.sol:31"
          },
          {
            "contract": "Marketplace",
            "label": "_informationOf",
            "type": "t_mapping(t_uint256,t_struct(Information)7158_storage)",
            "src": "contracts\\Marketplace.sol:32"
          },
          {
            "contract": "Marketplace",
            "label": "_currencyWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:33"
          },
          {
            "contract": "Marketplace",
            "label": "_walletCanSell",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:34"
          },
          {
            "contract": "Marketplace",
            "label": "isEveryoneCanSell",
            "type": "t_bool",
            "src": "contracts\\Marketplace.sol:35"
          },
          {
            "contract": "Marketplace",
            "label": "_listNFTOnSellOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Marketplace.sol:36"
          }
        ],
        "types": {
          "t_contract(ERC721Upgradeable)2606": {
            "label": "contract ERC721Upgradeable"
          },
          "t_mapping(t_uint256,t_struct(Information)7158_storage)": {
            "label": "mapping(uint256 => struct Marketplace.Information)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Information)7158_storage": {
            "label": "struct Marketplace.Information",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6ba35a8e546904072a9169e59c9b2b3d495e2b9bb1d21476348b3bacfba593fc": {
      "address": "0xDea7665FdBAA9E522F8121A50D617f373421Ff31",
      "txHash": "0x6dfede33c6e1f9f2612e729a77d4b8708a5e9d90713ae10128a2a4838e86625d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Marketplace",
            "label": "quantumAccelerator",
            "type": "t_contract(QuantumAccelerator)7401",
            "src": "contracts\\Marketplace.sol:31"
          },
          {
            "contract": "Marketplace",
            "label": "listCurrencyWhitelist",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:32"
          },
          {
            "contract": "Marketplace",
            "label": "_currencyWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:33"
          },
          {
            "contract": "Marketplace",
            "label": "_informationOf",
            "type": "t_mapping(t_uint256,t_struct(Information)5908_storage)",
            "src": "contracts\\Marketplace.sol:34"
          },
          {
            "contract": "Marketplace",
            "label": "_walletCanSell",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:35"
          },
          {
            "contract": "Marketplace",
            "label": "isEveryoneCanSell",
            "type": "t_bool",
            "src": "contracts\\Marketplace.sol:36"
          },
          {
            "contract": "Marketplace",
            "label": "_listNFTOnSellOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Marketplace.sol:37"
          },
          {
            "contract": "Marketplace",
            "label": "receiveFeeWallet",
            "type": "t_address",
            "src": "contracts\\Marketplace.sol:38"
          },
          {
            "contract": "Marketplace",
            "label": "_priceMintNFT",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Marketplace.sol:39"
          }
        ],
        "types": {
          "t_contract(QuantumAccelerator)7401": {
            "label": "contract QuantumAccelerator"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Information)5908_storage)": {
            "label": "mapping(uint256 => struct Marketplace.Information)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Information)5908_storage": {
            "label": "struct Marketplace.Information",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "adc2143061801fc848bee222d19c9205213188a0191b9da0f2db6400e4267be0": {
      "address": "0xB97c8e01A171f4f6ec7FBEF40ABbA4A14aEe9638",
      "txHash": "0x8bdd201f04a1c53c7c3f94e084e358a06810e719ce4ca241d7d8aff8daaf0148",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Marketplace",
            "label": "quantumAccelerator",
            "type": "t_contract(QuantumAccelerator)6378",
            "src": "contracts\\Marketplace.sol:31"
          },
          {
            "contract": "Marketplace",
            "label": "listCurrencyWhitelist",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:32"
          },
          {
            "contract": "Marketplace",
            "label": "_currencyWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:33"
          },
          {
            "contract": "Marketplace",
            "label": "_informationOf",
            "type": "t_mapping(t_uint256,t_struct(Information)4855_storage)",
            "src": "contracts\\Marketplace.sol:34"
          },
          {
            "contract": "Marketplace",
            "label": "_walletCanSell",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:35"
          },
          {
            "contract": "Marketplace",
            "label": "isEveryoneCanSell",
            "type": "t_bool",
            "src": "contracts\\Marketplace.sol:36"
          },
          {
            "contract": "Marketplace",
            "label": "_listNFTOnSellOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Marketplace.sol:37"
          },
          {
            "contract": "Marketplace",
            "label": "receiveFeeWallet",
            "type": "t_address",
            "src": "contracts\\Marketplace.sol:38"
          },
          {
            "contract": "Marketplace",
            "label": "_priceMintNFT",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Marketplace.sol:39"
          }
        ],
        "types": {
          "t_contract(QuantumAccelerator)6378": {
            "label": "contract QuantumAccelerator"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Information)4855_storage)": {
            "label": "mapping(uint256 => struct Marketplace.Information)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Information)4855_storage": {
            "label": "struct Marketplace.Information",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "73d93b04788fa1e62eb2da79c8ac7c05b25126aea8fb241bf1fa640b09b00df3": {
      "address": "0xB937565C7De0c51Fa5AF84569E693b0C70845718",
      "txHash": "0xf097826913f6defe754c8c166cccaff5efc5c673ff921419508d466988cfcece",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Marketplace",
            "label": "quantumAccelerator",
            "type": "t_contract(QuantumAccelerator)7470",
            "src": "contracts\\Marketplace.sol:31"
          },
          {
            "contract": "Marketplace",
            "label": "listCurrencyWhitelist",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:32"
          },
          {
            "contract": "Marketplace",
            "label": "_currencyWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:33"
          },
          {
            "contract": "Marketplace",
            "label": "_informationOf",
            "type": "t_mapping(t_uint256,t_struct(Information)5908_storage)",
            "src": "contracts\\Marketplace.sol:34"
          },
          {
            "contract": "Marketplace",
            "label": "_walletCanSell",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:35"
          },
          {
            "contract": "Marketplace",
            "label": "isEveryoneCanSell",
            "type": "t_bool",
            "src": "contracts\\Marketplace.sol:36"
          },
          {
            "contract": "Marketplace",
            "label": "_listNFTOnSellOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Marketplace.sol:37"
          },
          {
            "contract": "Marketplace",
            "label": "receiveFeeWallet",
            "type": "t_address",
            "src": "contracts\\Marketplace.sol:38"
          },
          {
            "contract": "Marketplace",
            "label": "_priceMintNFT",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Marketplace.sol:39"
          },
          {
            "contract": "Marketplace",
            "label": "maxNFTCanMint",
            "type": "t_uint256",
            "src": "contracts\\Marketplace.sol:40"
          },
          {
            "contract": "Marketplace",
            "label": "supplyNFTMinted",
            "type": "t_uint256",
            "src": "contracts\\Marketplace.sol:41"
          }
        ],
        "types": {
          "t_contract(QuantumAccelerator)7470": {
            "label": "contract QuantumAccelerator"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Information)5908_storage)": {
            "label": "mapping(uint256 => struct Marketplace.Information)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Information)5908_storage": {
            "label": "struct Marketplace.Information",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "600f0298c55264b40c75d1f6177ddf34073951589fbbec9b62297398ad924bc6": {
      "address": "0x2614b2dB533c0978f5E1806360540C0bED282F89",
      "txHash": "0x1e74b669e852995a6859aa13625ac1ce8f9be641443c2475ad062f8a6650ddd3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Marketplace",
            "label": "_itemId",
            "type": "t_struct(Counter)3111_storage",
            "src": "contracts\\Marketplace.sol:37"
          },
          {
            "contract": "Marketplace",
            "label": "_operators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:38"
          },
          {
            "contract": "Marketplace",
            "label": "quantumAccelerator",
            "type": "t_contract(QuantumAccelerator)9080",
            "src": "contracts\\Marketplace.sol:39"
          },
          {
            "contract": "Marketplace",
            "label": "listOperators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:40"
          },
          {
            "contract": "Marketplace",
            "label": "listCurrencyWhitelist",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:41"
          },
          {
            "contract": "Marketplace",
            "label": "listNFTContractWhitelist",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:42"
          },
          {
            "contract": "Marketplace",
            "label": "_currencyWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:43"
          },
          {
            "contract": "Marketplace",
            "label": "_NFTContractWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:44"
          },
          {
            "contract": "Marketplace",
            "label": "_informationOf",
            "type": "t_mapping(t_uint256,t_struct(Information)7244_storage)",
            "src": "contracts\\Marketplace.sol:45"
          },
          {
            "contract": "Marketplace",
            "label": "_listNFTOnSell",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Marketplace.sol:46"
          },
          {
            "contract": "Marketplace",
            "label": "_walletCanSell",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:47"
          },
          {
            "contract": "Marketplace",
            "label": "isEveryoneCanSell",
            "type": "t_bool",
            "src": "contracts\\Marketplace.sol:48"
          },
          {
            "contract": "Marketplace",
            "label": "_listNFTOnSellOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Marketplace.sol:49"
          },
          {
            "contract": "Marketplace",
            "label": "receiveFeeWallet",
            "type": "t_address",
            "src": "contracts\\Marketplace.sol:50"
          },
          {
            "contract": "Marketplace",
            "label": "_priceMintNFT",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Marketplace.sol:51"
          },
          {
            "contract": "Marketplace",
            "label": "maxNFTCanMint",
            "type": "t_uint256",
            "src": "contracts\\Marketplace.sol:52"
          },
          {
            "contract": "Marketplace",
            "label": "supplyNFTMinted",
            "type": "t_uint256",
            "src": "contracts\\Marketplace.sol:53"
          }
        ],
        "types": {
          "t_struct(Counter)3111_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(QuantumAccelerator)9080": {
            "label": "contract QuantumAccelerator"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Information)7244_storage)": {
            "label": "mapping(uint256 => struct Marketplace.Information)"
          },
          "t_struct(Information)7244_storage": {
            "label": "struct Marketplace.Information",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
