{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xf5059a5D33d5853360D16C683c16e67980206f36",
      "txHash": "0xa96e95b701f40dcd9818955759c6ef56bdcbfb45f15d7603a7f680472006e730",
      "kind": "uups"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x34863c34d042f8a06704ee3c640dc6a967c7e4d5e2a45aa83088370960529351",
      "kind": "uups"
    },
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0xe2158ee6bfd36487ef0d2f94952de62fc4aa3ffee543a7a77655c7e05136f2d0",
      "kind": "uups"
    }
  ],
  "impls": {
    "98c53e8cee94a923ceabe15e1bb86d5799c39c46c3ed1b6d6198e50cd20c5b6d": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x63609b3cae3c37c665c55e4d1f8a117358d603fb66f04d54409d2f5f3ec5022b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Marketplace",
            "label": "_itemId",
            "type": "t_struct(Counter)3111_storage",
            "src": "contracts\\Marketplace.sol:37"
          },
          {
            "contract": "Marketplace",
            "label": "_operators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:38"
          },
          {
            "contract": "Marketplace",
            "label": "quantumAccelerator",
            "type": "t_contract(QuantumAccelerator)9084",
            "src": "contracts\\Marketplace.sol:39"
          },
          {
            "contract": "Marketplace",
            "label": "listOperators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:40"
          },
          {
            "contract": "Marketplace",
            "label": "listCurrencyWhitelist",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:41"
          },
          {
            "contract": "Marketplace",
            "label": "listNFTContractWhitelist",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:42"
          },
          {
            "contract": "Marketplace",
            "label": "_currencyWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:43"
          },
          {
            "contract": "Marketplace",
            "label": "_NFTContractWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:44"
          },
          {
            "contract": "Marketplace",
            "label": "_informationOf",
            "type": "t_mapping(t_uint256,t_struct(Information)7244_storage)",
            "src": "contracts\\Marketplace.sol:45"
          },
          {
            "contract": "Marketplace",
            "label": "_listNFTOnSell",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Marketplace.sol:46"
          },
          {
            "contract": "Marketplace",
            "label": "_walletCanSell",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:47"
          },
          {
            "contract": "Marketplace",
            "label": "isEveryoneCanSell",
            "type": "t_bool",
            "src": "contracts\\Marketplace.sol:48"
          },
          {
            "contract": "Marketplace",
            "label": "_listNFTOnSellOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Marketplace.sol:49"
          },
          {
            "contract": "Marketplace",
            "label": "receiveFeeWallet",
            "type": "t_address",
            "src": "contracts\\Marketplace.sol:50"
          },
          {
            "contract": "Marketplace",
            "label": "_priceMintNFT",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Marketplace.sol:51"
          },
          {
            "contract": "Marketplace",
            "label": "maxNFTCanMint",
            "type": "t_uint256",
            "src": "contracts\\Marketplace.sol:52"
          },
          {
            "contract": "Marketplace",
            "label": "supplyNFTMinted",
            "type": "t_uint256",
            "src": "contracts\\Marketplace.sol:53"
          }
        ],
        "types": {
          "t_struct(Counter)3111_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(QuantumAccelerator)9084": {
            "label": "contract QuantumAccelerator"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Information)7244_storage)": {
            "label": "mapping(uint256 => struct Marketplace.Information)"
          },
          "t_struct(Information)7244_storage": {
            "label": "struct Marketplace.Information",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c646c27ac96f5ded49eb81fcaa821f475b7eddfe66286e768fee4b65ef5479eb": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x0601944579263106bda2c29816767b29a3550f19d8f13980a4000f6470c62476",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\utils\\ERC721HolderUpgradeable.sol:34"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "Marketplace",
            "label": "_itemId",
            "type": "t_struct(Counter)3111_storage",
            "src": "contracts\\Marketplace.sol:37"
          },
          {
            "contract": "Marketplace",
            "label": "_operators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:38"
          },
          {
            "contract": "Marketplace",
            "label": "quantumAccelerator",
            "type": "t_contract(QuantumAccelerator)9269",
            "src": "contracts\\Marketplace.sol:39"
          },
          {
            "contract": "Marketplace",
            "label": "listOperators",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:40"
          },
          {
            "contract": "Marketplace",
            "label": "listCurrencyWhitelist",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:41"
          },
          {
            "contract": "Marketplace",
            "label": "listNFTContractWhitelist",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Marketplace.sol:42"
          },
          {
            "contract": "Marketplace",
            "label": "_currencyWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:43"
          },
          {
            "contract": "Marketplace",
            "label": "_NFTContractWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:44"
          },
          {
            "contract": "Marketplace",
            "label": "_informationOf",
            "type": "t_mapping(t_uint256,t_struct(Information)7244_storage)",
            "src": "contracts\\Marketplace.sol:45"
          },
          {
            "contract": "Marketplace",
            "label": "_listNFTOnSell",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Marketplace.sol:46"
          },
          {
            "contract": "Marketplace",
            "label": "_walletCanSell",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:47"
          },
          {
            "contract": "Marketplace",
            "label": "_walletCanBuyNFTMint",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Marketplace.sol:48"
          },
          {
            "contract": "Marketplace",
            "label": "isEveryoneCanSell",
            "type": "t_bool",
            "src": "contracts\\Marketplace.sol:49"
          },
          {
            "contract": "Marketplace",
            "label": "isEveryoneCanBuyNFTMint",
            "type": "t_bool",
            "src": "contracts\\Marketplace.sol:50"
          },
          {
            "contract": "Marketplace",
            "label": "_listNFTOnSellOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Marketplace.sol:51"
          },
          {
            "contract": "Marketplace",
            "label": "receiveFeeWallet",
            "type": "t_address",
            "src": "contracts\\Marketplace.sol:52"
          },
          {
            "contract": "Marketplace",
            "label": "_priceMintNFT",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Marketplace.sol:53"
          },
          {
            "contract": "Marketplace",
            "label": "maxNFTCanMint",
            "type": "t_uint256",
            "src": "contracts\\Marketplace.sol:54"
          },
          {
            "contract": "Marketplace",
            "label": "supplyNFTMinted",
            "type": "t_uint256",
            "src": "contracts\\Marketplace.sol:55"
          },
          {
            "contract": "Marketplace",
            "label": "_fee",
            "type": "t_uint256",
            "src": "contracts\\Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "_percent",
            "type": "t_uint256",
            "src": "contracts\\Marketplace.sol:57"
          }
        ],
        "types": {
          "t_struct(Counter)3111_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(QuantumAccelerator)9269": {
            "label": "contract QuantumAccelerator"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Information)7244_storage)": {
            "label": "mapping(uint256 => struct Marketplace.Information)"
          },
          "t_struct(Information)7244_storage": {
            "label": "struct Marketplace.Information",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
